syntax = "proto3";

package grpcwebchat;
option java_package = "com.angelomelonas.grpcwebchat";

service ChatService {

    rpc Authenticate (AuthenticationRequest) returns (AuthenticationResponse);

    /**
     * The client subscribes to all messages sent by other clients. Clients can only subscribe if they have been authenticated.
     * This stream is long-lived and only closed once the client unsubscribes or disconnects.
     *
     * Request              SubscriptionRequest containing the client's Identity.
     * Response (stream)    A long-lived stream of Messages.
     */
    rpc Subscribe (SubscriptionRequest) returns (stream Message);

    /**
     * The client unsubscribes from receiving messages.
     *
     * Request      SubscriptionRequest containing the client's username.
     * Response     A UnsubscriptionResponse informing the client it's been successfully unsubscribed.
     */
    rpc Unsubscribe (UnsubscriptionRequest) returns (UnsubscriptionResponse);

    /**
     * The client sends a message to all other subscribed clients.
     *
     * Request      MessageRequest containing the client's Message.
     * Response     A MessageResponse informing the client if it's message has been sent successfully.
     */
    rpc SendMessage (MessageRequest) returns (MessageResponse);

    /**
     * The client can request a list of all subscribed users.
     *
     * Request      SubscribedUsersRequest is a message to request the list of subscribed users.
     * Response     A long-lived stream of SubscribedUsers.
     */
    rpc SubscribedUsersList (SubscribedUsersRequest) returns (stream SubscribedUsers);
}

message AuthenticationRequest {
}

message AuthenticationResponse {
    string uuid = 1;
}

message SubscriptionRequest {
    string uuid = 1;
    string username = 2;
}

message UnsubscriptionRequest {
    string uuid = 1;
}

message UnsubscriptionResponse {
    string uuid = 1;
    string message = 2;
}

message MessageRequest {
    string uuid = 1;
    string username = 2;
    string message = 3;
}

message MessageResponse {
    string uuid = 1;
    string message = 2;
}

message Message {
    string uuid = 1;
    string username = 2;
    string message = 3;
    int64 timestamp = 4;
}

message SubscribedUsersRequest {
    string uuid = 1;
}

message SubscribedUsers {
    /* map<username, subscribed> */
    map<string, bool> users = 1;
}
